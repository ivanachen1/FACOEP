tabla_parametros_comprobantes = tipo_factura)
tabla_comprobantes_auxiliar <- dbGetQuery(conn = con,
query_comprobantes)
tabla_comprobantes_auxiliar <- CleanTablaComprobantes(tabla_comprobantes = tabla_comprobantes_auxiliar,
tabla_parametros_comprobantes = tipo_comprobante_asociado)
tabla_comprobantes_auxiliar <- data.frame("Comprobante" = tabla_comprobantes_auxiliar$NroComprobante,"Importe" = tabla_comprobantes_auxiliar$comprobantetotalimporte)
query_comprobantes_asociados <- ("SELECT * FROM comprobantesasociados")
tabla_comprobantes_asociados <- dbGetQuery(conn = con,
query_comprobantes_asociados)
tabla_comprobantes_asociados <- CleanComprobantesAsociados(tabla_comprobantes_asociados = tabla_comprobantes_asociados,
tabla_parametros_comprobantes = tipo_comprobante_asociado,
tabla_comprobantes_importes =  tabla_comprobantes_auxiliar)
View(tabla_comprobantes_auxiliar)
workdirectory_one <- "C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Cobranzas/Versión 7"
source("C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores/Script_Efectores_Funciones.r")
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
user <- GetUser()
host <- GetHost()
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "facoep",
host = host, port = 5432,
user = user, password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
tabla_parametros_comprobantes <- GetFile("tabla_parametros_comprobantes.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
tipo_factura <- TransformFile(tabla_parametros_comprobantes,
FilterOne = "factura")
tipo_comprobante_asociado <- TransformFile(tabla_parametros_comprobantes,
FilterOne = "notadb")
query_comprobantes <- GetTablaComprobantes()
tabla_comprobantes <- dbGetQuery(conn = con,
query_comprobantes)
comprobantes_importes <- data.frame("Comprobante" = tabla_comprobantes$NroComprobante,"Importe" = tabla_comprobantes$comprobantetotalimporte)
tabla_comprobantes <- CleanTablaComprobantes(tabla_comprobantes = tabla_comprobantes,
tabla_parametros_comprobantes = tipo_factura)
tabla_comprobantes_auxiliar <- dbGetQuery(conn = con,
query_comprobantes)
tabla_comprobantes_auxiliar <- CleanTablaComprobantes(tabla_comprobantes = tabla_comprobantes_auxiliar,
tabla_parametros_comprobantes = tipo_comprobante_asociado)
tabla_comprobantes_auxiliar <- data.frame("Comprobante" = tabla_comprobantes_auxiliar$NroComprobante,"Importe" = tabla_comprobantes_auxiliar$comprobantetotalimporte)
query_comprobantes_asociados <- ("SELECT * FROM comprobantesasociados")
tabla_comprobantes_asociados <- dbGetQuery(conn = con,
query_comprobantes_asociados)
tabla_comprobantes_asociados <- CleanComprobantesAsociados(tabla_comprobantes_asociados = tabla_comprobantes_asociados,
tabla_parametros_comprobantes = tipo_comprobante_asociado,
tabla_comprobantes_importes =  tabla_comprobantes_auxiliar)
query <- ("SELECT
hosp.pprnombre as Efector,CAST(ooss.obsocialesclienteid AS TEXT) || ' - ' || CAST(ooss.obsocialessigla AS TEXT) as OOSS,
nota.comprobantefechaemision as Fecha,
CASE WHEN dets.comprobantecrgdetmotivodebcred = 14 THEN 'Cobertura' ELSE '' END
||
CASE WHEN dets.comprobantecrgdetmotivodebcred = 11 THEN 'Débito Médico' ELSE '' END
||
CASE WHEN dets.comprobantecrgdetmotivodebcred NOT IN (11,14) THEN  'Constatación de la Prestación' ELSE '' END AS Motivo,
ComprobanteCRGDetImporteDebita as Rechazado,
ComprobanteCRGDetImporteAcredi as Aceptado
FROM COMPROBANTES fact
LEFT JOIN COMPROBANTESASOCIADOS asoc ON fact.empcod = asoc.empcod and
fact.sucursalcodigo = asoc.sucursalcodigo and
fact.comprobantetipoentidad = asoc.comprobantetipoentidad and
fact.comprobanteentidadcodigo = asoc.comprobanteentidadcodigo and
fact.tipocomprobantecodigo = asoc.tipocomprobantecodigo and
fact.comprobanteprefijo = asoc.comprobanteprefijo and
fact.comprobantecodigo = asoc.comprobantecodigo
LEFT JOIN COMPROBANTES nota 	ON 	asoc.comprobanteasoctipo = nota.tipocomprobantecodigo and
asoc.comprobanteasocprefijo = nota.comprobanteprefijo and
asoc.comprobanteasoccodigo = nota.comprobantecodigo
LEFT JOIN COMPROBANTECRG crgs ON	crgs.empcod = nota.empcod and
crgs.sucursalcodigo = nota.sucursalcodigo and
crgs.comprobantetipoentidad = nota.comprobantetipoentidad and
crgs.comprobanteentidadcodigo = nota.comprobanteentidadcodigo and
crgs.tipocomprobantecodigo = nota.tipocomprobantecodigo and
crgs.comprobanteprefijo = nota.comprobanteprefijo and
crgs.comprobantecodigo = nota.comprobantecodigo
LEFT JOIN COMPROBANTECRGDET dets ON 	dets.empcod = crgs.empcod and
dets.sucursalcodigo = crgs.sucursalcodigo and
dets.comprobantetipoentidad = crgs.comprobantetipoentidad and
dets.comprobanteentidadcodigo = crgs.comprobanteentidadcodigo and
dets.tipocomprobantecodigo = crgs.tipocomprobantecodigo and
dets.comprobanteprefijo = crgs.comprobanteprefijo and
dets.comprobantecodigo = crgs.comprobantecodigo and
dets.comprobantepprid = crgs.comprobantepprid and
dets.comprobantecrgnro = crgs.comprobantecrgnro
LEFT JOIN proveedorprestador hosp ON 	hosp.pprid = dets.comprobantepprid
LEFT JOIN obrassociales ooss ON 	ooss.obsocialesclienteid = nota.comprobanteentidadcodigo
WHERE   fact.tipocomprobantecodigo IN ('FACA2', 'FACB2', 'FAECA', 'FAECB') and
asoc.comprobanteasoctipo = 'NOTADB' and
nota.comprobantefechaemision BETWEEN '01-01-2021' and '31-12-2021' and
nota.comprobanteapertura IN (2,3) and
nota.comprobanteentidadcodigo NOT IN (1,201,208,209,210,272,532,621,649,650,651,652,657,1069)
")
Base <- dbGetQuery(conn = con,query)
View(Base)
print(query)
workdirectory_one <- "C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Cobranzas/Versión 7"
source("C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores/Script_Efectores_Funciones.r")
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
user <- GetUser()
host <- GetHost()
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "facoep",
host = host, port = 5432,
user = user, password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
tabla_parametros_comprobantes <- GetFile("tabla_parametros_comprobantes.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
FacturasQuery <- TransformFile(tabla_parametros_comprobantes,FilterOne = "factura")
FacturasQuery <- GetListaINSQL(FacturasQuery,print = FALSE)
NotaDB <- TransformFile(tabla_parametros_comprobantes,FilterOne = "notadb")
NotaDB <- GetListaINSQL(NotaDB,print = FALSE)
tabla_apertura <- GetFile("tabla_aperturas.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
tabla_apertura <- TransFormTablaApertura(archivo  = tabla_apertura,print = TRUE)
query <- glue("SELECT
hosp.pprnombre as Efector,CAST(ooss.clienteid AS TEXT) || ' - ' || CAST(ooss.clientenombre AS TEXT) as OOSS,
nota.comprobantefechaemision as Fecha,
dets.comprobantecrgdetmotivodebcred,
ComprobanteCRGDetImporteDebita as Rechazado,
ComprobanteCRGDetImporteAcredi as Aceptado
FROM COMPROBANTES fact
LEFT JOIN COMPROBANTESASOCIADOS asoc ON fact.empcod = asoc.empcod and
fact.sucursalcodigo = asoc.sucursalcodigo and
fact.comprobantetipoentidad = asoc.comprobantetipoentidad and
fact.comprobanteentidadcodigo = asoc.comprobanteentidadcodigo and
fact.tipocomprobantecodigo = asoc.tipocomprobantecodigo and
fact.comprobanteprefijo = asoc.comprobanteprefijo and
fact.comprobantecodigo = asoc.comprobantecodigo
LEFT JOIN COMPROBANTES nota 	ON 	asoc.comprobanteasoctipo = nota.tipocomprobantecodigo and
asoc.comprobanteasocprefijo = nota.comprobanteprefijo and
asoc.comprobanteasoccodigo = nota.comprobantecodigo
LEFT JOIN COMPROBANTECRG crgs ON	crgs.empcod = nota.empcod and
crgs.sucursalcodigo = nota.sucursalcodigo and
crgs.comprobantetipoentidad = nota.comprobantetipoentidad and
crgs.comprobanteentidadcodigo = nota.comprobanteentidadcodigo and
crgs.tipocomprobantecodigo = nota.tipocomprobantecodigo and
crgs.comprobanteprefijo = nota.comprobanteprefijo and
crgs.comprobantecodigo = nota.comprobantecodigo
LEFT JOIN COMPROBANTECRGDET dets ON 	dets.empcod = crgs.empcod and
dets.sucursalcodigo = crgs.sucursalcodigo and
dets.comprobantetipoentidad = crgs.comprobantetipoentidad and
dets.comprobanteentidadcodigo = crgs.comprobanteentidadcodigo and
dets.tipocomprobantecodigo = crgs.tipocomprobantecodigo and
dets.comprobanteprefijo = crgs.comprobanteprefijo and
dets.comprobantecodigo = crgs.comprobantecodigo and
dets.comprobantepprid = crgs.comprobantepprid and
dets.comprobantecrgnro = crgs.comprobantecrgnro
LEFT JOIN proveedorprestador hosp ON 	hosp.pprid = dets.comprobantepprid
LEFT JOIN clientes ooss ON 	ooss.clienteid = nota.comprobanteentidadcodigo
WHERE   fact.tipocomprobantecodigo IN ({FacturasQuery}) and
asoc.comprobanteasoctipo = {NotaDB} and
nota.comprobanteapertura IN ({tabla_apertura}) and
nota.comprobanteentidadcodigo NOT IN (1,201,208,209,210,272,532,621,649,650,651,652,657,1069)")
print(query)
TransFormTablaApertura <- function(archivo,print = FALSE){
archivo <- archivo$idApertura
archivo <- unique(archivo)
archivo <- as.vector(archivo)
archivo <- toString(sprintf("'%s'", archivo))
archivo <- as.numeric(archivo)
ifelse(print == TRUE,print(archivo),return(archivo))
}
tabla_apertura <- GetFile("tabla_aperturas.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
tabla_apertura <- TransFormTablaApertura(archivo  = tabla_apertura,print = TRUE)
tabla_apertura <- GetFile("tabla_aperturas.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
tabla_apertura <- TransFormTablaApertura(archivo  = tabla_apertura,print = TRUE)
TransFormTablaApertura <- function(archivo,print = FALSE){
archivo <- archivo$idApertura
archivo <- unique(archivo)
archivo <- as.vector(archivo)
archivo <- toString(sprintf("'%s'", archivo))
ifelse(print == TRUE,print(archivo),return(archivo))
}
tabla_apertura <- GetFile("tabla_aperturas.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
tabla_apertura <- TransFormTablaApertura(archivo  = tabla_apertura,print = TRUE)
query <- glue("SELECT
hosp.pprnombre as Efector,CAST(ooss.clienteid AS TEXT) || ' - ' || CAST(ooss.clientenombre AS TEXT) as OOSS,
nota.comprobantefechaemision as Fecha,
dets.comprobantecrgdetmotivodebcred,
ComprobanteCRGDetImporteDebita as Rechazado,
ComprobanteCRGDetImporteAcredi as Aceptado
FROM COMPROBANTES fact
LEFT JOIN COMPROBANTESASOCIADOS asoc ON fact.empcod = asoc.empcod and
fact.sucursalcodigo = asoc.sucursalcodigo and
fact.comprobantetipoentidad = asoc.comprobantetipoentidad and
fact.comprobanteentidadcodigo = asoc.comprobanteentidadcodigo and
fact.tipocomprobantecodigo = asoc.tipocomprobantecodigo and
fact.comprobanteprefijo = asoc.comprobanteprefijo and
fact.comprobantecodigo = asoc.comprobantecodigo
LEFT JOIN COMPROBANTES nota 	ON 	asoc.comprobanteasoctipo = nota.tipocomprobantecodigo and
asoc.comprobanteasocprefijo = nota.comprobanteprefijo and
asoc.comprobanteasoccodigo = nota.comprobantecodigo
LEFT JOIN COMPROBANTECRG crgs ON	crgs.empcod = nota.empcod and
crgs.sucursalcodigo = nota.sucursalcodigo and
crgs.comprobantetipoentidad = nota.comprobantetipoentidad and
crgs.comprobanteentidadcodigo = nota.comprobanteentidadcodigo and
crgs.tipocomprobantecodigo = nota.tipocomprobantecodigo and
crgs.comprobanteprefijo = nota.comprobanteprefijo and
crgs.comprobantecodigo = nota.comprobantecodigo
LEFT JOIN COMPROBANTECRGDET dets ON 	dets.empcod = crgs.empcod and
dets.sucursalcodigo = crgs.sucursalcodigo and
dets.comprobantetipoentidad = crgs.comprobantetipoentidad and
dets.comprobanteentidadcodigo = crgs.comprobanteentidadcodigo and
dets.tipocomprobantecodigo = crgs.tipocomprobantecodigo and
dets.comprobanteprefijo = crgs.comprobanteprefijo and
dets.comprobantecodigo = crgs.comprobantecodigo and
dets.comprobantepprid = crgs.comprobantepprid and
dets.comprobantecrgnro = crgs.comprobantecrgnro
LEFT JOIN proveedorprestador hosp ON 	hosp.pprid = dets.comprobantepprid
LEFT JOIN clientes ooss ON 	ooss.clienteid = nota.comprobanteentidadcodigo
WHERE   fact.tipocomprobantecodigo IN ({FacturasQuery}) and
asoc.comprobanteasoctipo = {NotaDB} and
nota.comprobanteapertura IN ({tabla_apertura}) and
nota.comprobanteentidadcodigo NOT IN (1,201,208,209,210,272,532,621,649,650,651,652,657,1069)")
print(query)
Base <- dbGetQuery(conn = con,query)
View(Base)
Base <- unique(Base)
Base <- select(Base, "Efector" = pprnombre, "OS" = os, "TipoFac" = tipocomprobantecodigo, "Fact" = comprobantecodigo, "Emision" = comprobantefechaemision, "Importe" = comprobantecrgimportetotaldeta)
Base <- select(Base, "Efector" = efector, "OS" = os, "TipoFac" = tipocomprobantecodigo, "Fact" = comprobantecodigo, "Emision" = comprobantefechaemision, "Importe" = comprobantecrgimportetotaldeta)
Base <- select(Base, "Efector" = efector, "Obra social" = OOSS, "TipoFac" = tipocomprobantecodigo, "Factura" = comprobantecodigo, "Emision" = comprobantefechaemision, "Importe" = comprobantecrgimportetotaldeta)
View(Base)
Base <- select(Base, "Efector" = efector, "Obra social" = ooss, "TipoFac" = tipocomprobantecodigo, "Factura" = comprobantecodigo, "Emision" = comprobantefechaemision, "Importe" = comprobantecrgimportetotaldeta)
workdirectory_one <- "C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Cobranzas/Versión 7"
source("C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores/Script_Efectores_Funciones.r")
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
user <- GetUser()
host <- GetHost()
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "facoep",
host = host, port = 5432,
user = user, password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
tabla_parametros_comprobantes <- GetFile("tabla_parametros_comprobantes.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
tabla_parametros_comprobantes <- TransformFile(tabla_parametros_comprobantes,FilterOne = "factura")
FacturasQuery <- TransformFile(tabla_parametros_comprobantes,FilterOne = "factura")
FacturasQuery <- GetListaINSQL(FacturasQuery,print = FALSE)
Base <- glue("SELECT
c.comprobanteccosto as CentroCosto,
pprnombre,
CAST(os.clienteid AS TEXT) || ' - ' || CAST(os.clientenombre AS TEXT) as OS,
c.tipocomprobantecodigo,
c.comprobanteprefijo,
c.comprobantecodigo,
c.comprobantefechaemision,
comprobantecrgnro,
comprobantecrgimportetotaldeta
FROM comprobantes c
LEFT JOIN comprobantecrg crg ON crg.comprobanteprefijo = c.comprobanteprefijo and
crg.empcod = c.empcod and
crg.tipocomprobantecodigo = c.tipocomprobantecodigo and
crg.sucursalcodigo = c.sucursalcodigo and
crg.comprobantetipoentidad = c.comprobantetipoentidad and
crg.comprobantecodigo = c.comprobantecodigo and
crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo
LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo
LEFT JOIN proveedorprestador pp ON pp.pprid = comprobantepprid
WHERE c.tipocomprobantecodigo IN ({FacturasQuery})")
Base <- dbGetQuery(conn = con,Base)
Base <- CleanTablaComprobantes(tabla_comprobantes = Base,tabla_parametros_comprobantes = tabla_parametros_comprobantes)
source("C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores/Script_Efectores_Funciones.r")
CleanTablaComprobantes <- function(tabla_comprobantes){
tabla_comprobantes$tipocomprobantecodigo <- gsub(" ","",tabla_comprobantes$tipocomprobantecodigo)
tabla_comprobantes$NroComprobante <- paste(tabla_comprobantes$tipocomprobantecodigo,
tabla_comprobantes$comprobanteprefijo,
tabla_comprobantes$comprobantecodigo,sep = "-")
tabla_comprobantes$comprobanteprefijo <- NULL
tabla_comprobantes$comprobantecodigo <- NULL
#tabla_comprobantes<- filter(tabla_comprobantes,os != is.na(os))
tabla_comprobantes<- unique(tabla_comprobantes)
return(tabla_comprobantes)
}
Base <- CleanTablaComprobantes(tabla_comprobantes = Base)
Base <- unique(Base)
Base <- select(Base, "Efector" = pprnombre, "OS" = os, "TipoFac" = tipocomprobantecodigo, "Fact" = NroComprobante, "Emision" = comprobantefechaemision, "Importe" = comprobantecrgimportetotaldeta)
Base <- aggregate(.~Efector+OS+TipoFac+Fact+Emision, Base, sum)
workdirectory_one <- "C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Cobranzas/Versión 7"
source("C:/Users/User/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores/Script_Efectores_Funciones.r")
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
user <- GetUser()
host <- GetHost()
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "facoep",
host = host, port = 5432,
user = user, password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
tabla_parametros_comprobantes <- GetFile("tabla_parametros_comprobantes.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
tabla_parametros_comprobantes <- TransformFile(tabla_parametros_comprobantes,FilterOne = "factura")
FacturasQuery <- TransformFile(tabla_parametros_comprobantes,FilterOne = "factura")
FacturasQuery <- GetListaINSQL(FacturasQuery,print = FALSE)
Base <- glue("SELECT
c.comprobanteccosto as CentroCosto,
pprnombre,
CAST(os.clienteid AS TEXT) || ' - ' || CAST(os.clientenombre AS TEXT) as OS,
c.tipocomprobantecodigo,
c.comprobanteprefijo,
c.comprobantecodigo,
c.comprobantefechaemision,
comprobantecrgnro,
comprobantecrgimportetotaldeta
FROM comprobantes c
LEFT JOIN comprobantecrg crg ON crg.comprobanteprefijo = c.comprobanteprefijo and
crg.empcod = c.empcod and
crg.tipocomprobantecodigo = c.tipocomprobantecodigo and
crg.sucursalcodigo = c.sucursalcodigo and
crg.comprobantetipoentidad = c.comprobantetipoentidad and
crg.comprobantecodigo = c.comprobantecodigo and
crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo
LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo
LEFT JOIN proveedorprestador pp ON pp.pprid = comprobantepprid
WHERE c.tipocomprobantecodigo IN ({FacturasQuery})")
Base <- dbGetQuery(conn = con,Base)
Base <- CleanTablaComprobantes(tabla_comprobantes = Base)
Base <- unique(Base)
Base <- select(Base,
"Efector" = pprnombre,
"OS" = os,
"TipoFac" = tipocomprobantecodigo,
"Fact" = NroComprobante,
"Emision" = comprobantefechaemision,
"Importe" = comprobantecrgimportetotaldeta,
"IDCentroCosto" = CentroCosto)
Base <- aggregate(.~Efector+OS+TipoFac+Fact+Emision+IDCentroCosto, Base, sum)
View(Base)
Base <- select(Base,
"Efector" = pprnombre,
"OS" = os,
"TipoFac" = tipocomprobantecodigo,
"Fact" = NroComprobante,
"Emision" = comprobantefechaemision,
"Importe" = comprobantecrgimportetotaldeta,
"IDCentroCosto" = centrocosto)
Base <- aggregate(.~Efector+OS+TipoFac+Fact+Emision+IDCentroCosto, Base, sum)
View(Base)
QueryCentroCosto <- "SELECT ccostocodigo,ccostodescripcion FROM centrocostos"
Base <- dbGetQuery(conn = con,QueryCentroCosto)
CentroCostos <- dbGetQuery(conn = con,QueryCentroCosto)
View(CentroCostos)
workdirectory_one <- "C:/Users/iachenbach/Gobierno de la Ciudad de Buenos Aires/Pablo Alfredo Gadea - Tablero Facoep P BI/FACOEP/DBA/Reportes BI/2021/detalle debitos"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Efectores/version2"
Archivo <-"Script_debitos_Funciones.R"
#source("C:/Users/iachenbach/Desktop/Facoep - Scripts/DBA/Reportes BI/2021/Facturación/Script_Facturacion_Funciones.R")
GetFileAux <- function(workdirectory_one,workdirectory_two,Archivo){
intento <- try(source(paste(workdirectory_one,Archivo,sep = "/")),silent = TRUE)
if (class(intento) == "try-error"){
return(source(paste(workdirectory_two,Archivo,sep = "/")))} else {return(source(paste(workdirectory_one,Archivo,sep = "/")))}
}
GetFileAux(workdirectory_one = workdirectory_one,
workdirectory_two = workdirectory_two,
Archivo = Archivo)
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
drv <- dbDriver("PostgreSQL")
user <- GetUser()
host <- GetHost()
con <- dbConnect(drv, dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
SelectQuery <- paste("SELECT",
"comprobantefechaemision,",
"CONCAT(nota.tipocomprobantecodigo,'-',nota.comprobanteprefijo,'-',nota.comprobantecodigo) AS notadb,",
"CONCAT(nota.comprobanteentidadcodigo,'-',os.obsocialessigla) AS OOSS,",
"hosp.pprnombre as Efector,",
"crgs.comprobantecrgnro as CRG,",
"mot.motivodebitodescripcion as TipoDebito,",
"cat.motivodebitocategorianombre as Categoria,",
"dets.comprobantecrgdetmotivodescrip as Observaciones,",
"dets.ComprobanteCRGDetImporteDebita as Rechazado,",
"dets.ComprobanteCRGDetImporteAcredi as Aceptado,",
"dets.comprobantecrgdetpractica as codigo",
"FROM COMPROBANTES nota",
"LEFT JOIN COMPROBANTECRG crgs ON crgs.empcod = nota.empcod AND",
"crgs.sucursalcodigo = nota.sucursalcodigo AND",
"crgs.comprobantetipoentidad = nota.comprobantetipoentidad AND",
"crgs.comprobanteentidadcodigo = nota.comprobanteentidadcodigo AND",
"crgs.tipocomprobantecodigo = nota.tipocomprobantecodigo AND",
"crgs.comprobanteprefijo = nota.comprobanteprefijo AND",
"crgs.comprobantecodigo = nota.comprobantecodigo",
"LEFT JOIN COMPROBANTECRGDET dets ON dets.empcod = crgs.empcod AND",
"dets.sucursalcodigo = crgs.sucursalcodigo AND",
"dets.comprobantetipoentidad = crgs.comprobantetipoentidad AND",
"dets.comprobanteentidadcodigo = crgs.comprobanteentidadcodigo AND",
"dets.tipocomprobantecodigo = crgs.tipocomprobantecodigo AND",
"dets.comprobanteprefijo = crgs.comprobanteprefijo AND",
"dets.comprobantecodigo = crgs.comprobantecodigo AND",
"dets.comprobantepprid = crgs.comprobantepprid AND",
"dets.comprobantecrgnro = crgs.comprobantecrgnro",
"LEFT JOIN proveedorprestador hosp ON hosp.pprid = dets.comprobantepprid",
"LEFT JOIN motivodebito mot ON mot.motivodebitoid = dets.comprobantecrgdetmotivodebcred",
"LEFT JOIN motivodebitocategoria cat ON cat.motivodebitoid = dets.comprobantecrgdetmotivodebcred AND cat.motivodebitocategoriaid = dets.comprobantecrgdetmotdebcredcat",
"LEFT JOIN obrassociales os ON os.obsocialesclienteid = nota.comprobanteentidadcodigo",
"WHERE nota.tipocomprobantecodigo IN ('NOTADB')")
MotivosDebitos <- dbGetQuery(con,SelectQuery)
lapply(dbListConnections(drv = dbDriver("PostgreSQL")), function(x) {dbDisconnect(conn = x)})
MotivosDebitos <- select(MotivosDebitos,
"Fecha Emision Comprobante"= comprobantefechaemision,
"NOTADB" = notadb,
"OOSS" = ooss,
"Efector" = efector,
"NroCRG" = crg,
"Tipo Debito"= tipodebito,
"Categoria"= categoria,
"Observaciones" = observaciones,
"Rechazado" = rechazado,
"Aceptado" = aceptado,
"Prestacion" = codigo)
lapply(dbListConnections(drv = dbDriver("PostgreSQL")), function(x) {dbDisconnect(conn = x)})
workdirectory_one <- "C:/Users/iachenbach/Gobierno de la Ciudad de Buenos Aires/Pablo Alfredo Gadea - Tablero Facoep P BI/FACOEP/DBA/Reportes BI/2021/detalle debitos"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Efectores/version2"
Archivo <-"Script_debitos_Funciones.R"
#source("C:/Users/iachenbach/Desktop/Facoep - Scripts/DBA/Reportes BI/2021/Facturación/Script_Facturacion_Funciones.R")
GetFileAux <- function(workdirectory_one,workdirectory_two,Archivo){
intento <- try(source(paste(workdirectory_one,Archivo,sep = "/")),silent = TRUE)
if (class(intento) == "try-error"){
return(source(paste(workdirectory_two,Archivo,sep = "/")))} else {return(source(paste(workdirectory_one,Archivo,sep = "/")))}
}
GetFileAux(workdirectory_one = workdirectory_one,
workdirectory_two = workdirectory_two,
Archivo = Archivo)
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
drv <- dbDriver("PostgreSQL")
user <- GetUser()
host <- GetHost()
con <- dbConnect(drv, dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
SelectQuery <- paste("SELECT",
"comprobantefechaemision,",
"CONCAT(nota.tipocomprobantecodigo,'-',nota.comprobanteprefijo,'-',nota.comprobantecodigo) AS notadb,",
"CONCAT(nota.comprobanteentidadcodigo,'-',os.obsocialessigla) AS OOSS,",
"hosp.pprnombre as Efector,",
"crgs.comprobantecrgnro as CRG,",
"mot.motivodebitodescripcion as TipoDebito,",
"cat.motivodebitocategorianombre as Categoria,",
"dets.comprobantecrgdetmotivodescrip as Observaciones,",
"dets.ComprobanteCRGDetImporteDebita as Rechazado,",
"dets.ComprobanteCRGDetImporteAcredi as Aceptado,",
"dets.comprobantecrgdetpractica as codigo",
"FROM COMPROBANTES nota",
"LEFT JOIN COMPROBANTECRG crgs ON crgs.empcod = nota.empcod AND",
"crgs.sucursalcodigo = nota.sucursalcodigo AND",
"crgs.comprobantetipoentidad = nota.comprobantetipoentidad AND",
"crgs.comprobanteentidadcodigo = nota.comprobanteentidadcodigo AND",
"crgs.tipocomprobantecodigo = nota.tipocomprobantecodigo AND",
"crgs.comprobanteprefijo = nota.comprobanteprefijo AND",
"crgs.comprobantecodigo = nota.comprobantecodigo",
"LEFT JOIN COMPROBANTECRGDET dets ON dets.empcod = crgs.empcod AND",
"dets.sucursalcodigo = crgs.sucursalcodigo AND",
"dets.comprobantetipoentidad = crgs.comprobantetipoentidad AND",
"dets.comprobanteentidadcodigo = crgs.comprobanteentidadcodigo AND",
"dets.tipocomprobantecodigo = crgs.tipocomprobantecodigo AND",
"dets.comprobanteprefijo = crgs.comprobanteprefijo AND",
"dets.comprobantecodigo = crgs.comprobantecodigo AND",
"dets.comprobantepprid = crgs.comprobantepprid AND",
"dets.comprobantecrgnro = crgs.comprobantecrgnro",
"LEFT JOIN proveedorprestador hosp ON hosp.pprid = dets.comprobantepprid",
"LEFT JOIN motivodebito mot ON mot.motivodebitoid = dets.comprobantecrgdetmotivodebcred",
"LEFT JOIN motivodebitocategoria cat ON cat.motivodebitoid = dets.comprobantecrgdetmotivodebcred AND cat.motivodebitocategoriaid = dets.comprobantecrgdetmotdebcredcat",
"LEFT JOIN obrassociales os ON os.obsocialesclienteid = nota.comprobanteentidadcodigo",
"WHERE nota.tipocomprobantecodigo IN ('NOTADB')")
MotivosDebitos <- dbGetQuery(con,SelectQuery)
lapply(dbListConnections(drv = dbDriver("PostgreSQL")), function(x) {dbDisconnect(conn = x)})
MotivosDebitos <- select(MotivosDebitos,
"Fecha Emision Comprobante"= comprobantefechaemision,
"NOTADB" = notadb,
"OOSS" = ooss,
"Efector" = efector,
"NroCRG" = crg,
"Tipo Debito"= tipodebito,
"Categoria"= categoria,
"Observaciones" = observaciones,
"Rechazado" = rechazado,
"Aceptado" = aceptado,
"Prestacion" = codigo)
lapply(dbListConnections(drv = dbDriver("PostgreSQL")), function(x) {dbDisconnect(conn = x)})
