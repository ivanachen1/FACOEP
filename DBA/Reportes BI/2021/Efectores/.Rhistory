pw <- GetPassword()
user <- GetUser()
host <- GetHost()
database <-GetDatabase()
drv <- dbDriver("PostgreSQL")
#con <- dbConnect(drv, dbname = database,
#                 host = host, port = 5432,
#                 user = user, password = pw)
con <- dbConnect(drv, dbname = "facoep1",
host = "localhost", port = 5432,
user = "odoo", password = "odoo")
tabla_parametros_comprobantes <- GetFile("tabla_parametros_comprobantes _test.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
NotasDebito <- TransformFile(tabla_parametros_comprobantes,FilterOne = "test")
NotasDebito <- GetListaINSQL(NotasDebito,print = FALSE)
FacturasQuery <- TransformFile(tabla_parametros_comprobantes,FilterOne = "factura")
FacturasQuery <- GetListaINSQL(FacturasQuery,print = FALSE)
QueryNc <- glue(paste("SELECT",
"c.comprobanteccosto as CentroCosto,",
"CASE WHEN c.comprobantedetalle LIKE '%ANULADO%' THEN 'SI' ELSE 'NO' END AS FcAnulada,",
"pprnombre,",
"CONCAT(os.clienteid,'-',os.clientenombre) as OS,",
"CONCAT(asoc.tipocomprobantecodigo,'-',asoc.comprobanteprefijo,'-',asoc.comprobantecodigo) as Factura,",
"c.comprobantefechaemision as FechaNotacredito,",
"CONCAT(asoc.comprobanteasoctipo,'-',asoc.comprobanteasocprefijo,'-',asoc.comprobanteasoccodigo) as notacredito,",
"crg.comprobantecrgnro as nrocrgnotacredito,",
"crg.comprobantepprid as ppridnotacredito,",
"cg.crgfchemision,",
"crg.comprobantecrgimportetotaldeta as importecrgnc",
"FROM comprobantes c",
"LEFT JOIN comprobantesasociados asoc ON",
"c.sucursalcodigo = asoc.sucursalcodigo and",
"c.comprobantetipoentidad = asoc.comprobantetipoentidad and",
"c.comprobanteentidadcodigo = asoc.comprobanteentidadcodigo and",
"c.tipocomprobantecodigo = asoc.tipocomprobantecodigo and",
"c.comprobanteprefijo = asoc.comprobanteprefijo and",
"c.comprobantecodigo = asoc.comprobantecodigo",
"LEFT JOIN comprobantecrg crg ON",
"crg.empcod = asoc.empcod and",
"crg.tipocomprobantecodigo = asoc.comprobanteasoctipo and",
"crg.comprobanteprefijo = asoc.comprobanteasocprefijo and",
"crg.comprobantecodigo = asoc.comprobanteasoccodigo and",
"crg.sucursalcodigo = asoc.sucursalcodigo and",
"crg.comprobantetipoentidad = asoc.comprobantetipoentidad and",
"crg.comprobanteentidadcodigo = asoc.comprobanteentidadcodigo",
"LEFT JOIN crg cg",
"ON crg.comprobantecrgnro = cg.crgnum AND",
"crg.comprobantepprid = cg.pprid",
"LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo",
"LEFT JOIN proveedorprestador pp ON pp.pprid = crg.comprobantepprid",
"WHERE c.tipocomprobantecodigo IN ({FacturasQuery}) AND",
"c.comprobantefechaemision > '2017-12-31' AND",
"asoc.comprobanteasoctipo IN ({NotasDebito})"),sep = "\n")
cat(QueryNc)
Nc <- dbGetQuery(conn = con,QueryNc)
QueryFc <- glue(paste("SELECT",
"c.comprobanteccosto as CentroCosto,",
"c.comprobantesccosto as SubCentroCosto,",
"c.comprobantesaldo as saldo,",
"CASE WHEN c.comprobantedetalle LIKE '%ANULADO%' THEN 'SI' ELSE 'NO' END AS Anulada,",
"CASE WHEN c.comprobantedetalle LIKE '%intereses%' THEN 'SI'",
"WHEN c.comprobantedetalle LIKE '%Intereses%' THEN 'SI' ELSE 'NO' END AS Interes,",
"pprnombre,",
"CONCAT(os.clienteid,'-',os.clientenombre) as OS,",
"CONCAT(c.tipocomprobantecodigo,'-',c.comprobanteprefijo,'-',c.comprobantecodigo) as Factura,",
"c.comprobantetotalimporte as ValorFactura,",
"crg.comprobantecrgnro as nrocrgfactura,",
"crg.comprobantepprid as ppridfactura,",
"c.comprobantefechaemision as EmisionFactura,",
"cg.crgfchemision,",
"crg.comprobantecrgimportetotaldeta as importecrg",
"FROM comprobantes c",
"LEFT JOIN comprobantecrg crg ON",
"crg.empcod = c.empcod and",
"crg.tipocomprobantecodigo = c.tipocomprobantecodigo and",
"crg.comprobanteprefijo = c.comprobanteprefijo and",
"crg.comprobantecodigo = c.comprobantecodigo and",
"crg.sucursalcodigo = c.sucursalcodigo and",
"crg.comprobantetipoentidad = c.comprobantetipoentidad and",
"crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo",
"LEFT JOIN crg cg",
"ON crg.comprobantecrgnro = cg.crgnum AND",
"crg.comprobantepprid = cg.pprid",
"LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo",
"LEFT JOIN proveedorprestador pp ON pp.pprid = crg.comprobantepprid",
"WHERE c.tipocomprobantecodigo IN ({FacturasQuery}) AND",
"c.comprobantefechaemision > '2017-12-31' AND",
"c.comprobantetipoentidad = 2"),sep = "\n")
cat(QueryFc)
Fc <- dbGetQuery(conn = con,QueryFc)
ComprobantesAux <- dbGetQuery(conn = con,
glue(paste("SELECT CONCAT(tipocomprobantecodigo,'-',comprobanteprefijo,'-',comprobantecodigo) as notacredito,",
"comprobantetotalimporte as ImporteNc",
"FROM comprobantes WHERE tipocomprobantecodigo IN ({NotasDebito})")))
Nc <- left_join(Nc,ComprobantesAux,by = ("notacredito" = "notacredito"))
TablaFinal <- left_join(Fc,Nc,by = c('factura'='factura',
'os'='os',
'nrocrgfactura'='nrocrgnotacredito',
'ppridfactura'='ppridnotacredito'),keep = TRUE)
View(TablaFinal)
TablaFinal <- select(TablaFinal,
"CentroCosto" = centrocosto.x,
"SubcentroCosto" = subcentrocosto,
"Efector" = pprnombre.x,
"ObraSocial" = os.x,
"Factura" = factura.x,
"Saldo" = saldo,
"TotalFactura" = valorfactura,
"EmisionFactura" = emisionfactura,
"CrgFactura"= nrocrgfactura,
"PpridFactura"= ppridfactura,
"EmisionFactura"= emisionfactura,
"EmisionCrg"= crgfchemision.x,
"ValorCrgFactura" = importecrg,
"NotaCredito" = notacredito,
"TotalNotaCredito" = importenc,
"EmisionNotaCredito" = fechanotacredito,
"CrgNotacredito" = nrocrgnotacredito,
"PpridNotaCredito" = ppridnotacredito,
"ValorCrgNotacredito" = importecrgnc,
"Anulada" = anulada,
"Interes" = interes)
TablaFinal$Factura <- gsub(" ","",TablaFinal$Factura)
TablaFinal$NotaCredito <- gsub(" ","",TablaFinal$NotaCredito)
TablaFinal$Igualdad <- ifelse(is.na(TablaFinal$NotaCredito),"SinNc",
ifelse(TablaFinal$TotalFactura == TablaFinal$TotalNotaCredito,
"Iguales",
"Diferentes"))
lapply(dbListConnections(drv = dbDriver("PostgreSQL")), function(x) {dbDisconnect(conn = x)})
workdirectory <- "C:/Users/iachenbach/Gobierno de la Ciudad de Buenos Aires/Pablo Alfredo Gadea - Tablero Facoep P BI/FACOEP/DBA/Reportes BI/2021/Facturación"
Archivo <-"Script_Facturacion_Funciones.R"
source("C:/Users/iachenbach/Desktop/Facoep - Scripts/DBA/Reportes BI/2021/Facturación/Script_Facturacion_Funciones.R")
source(paste(workdirectory,Archivo,sep = "/"))
archivo_parametros <- GetArchivoParametros(path_one = workdirectory,
path_two = workdirectory,
file = "parametros_servidor.xlsx")
tipo_comprobantes <- GetFile("tipo_comprobante.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes <- select(tipo_comprobantes,
"TipoComprobante" = Tipo.Comprobante,
"SIF2" = Alimenta.a.SIF2)
Efectores <- GetFile("Efectores.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes$Comprobante <- tipo_comprobantes$TipoComprobante
tipo_comprobantes <- filter(tipo_comprobantes,SIF2 == TRUE)
comprobantes_query <- GetListaINSQL(tipo_comprobantes)
CentrosCostos  <- GetFile("centro_costo_comprobantes.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar <- GetFile(file_name = "Codigos Obra Social a Desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar$Comprobante <- CodigosOOSSDesestimar$Codigos.Obra.Social.a.Desestimar
CodigosOOSSDesestimar<- GetListaINSQL(CodigosOOSSDesestimar)
ComprobantesDesestimar <- GetFile(file_name = "comprobantes a desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
ComprobantesDesestimar$Comprobante <- ComprobantesDesestimar$Listado.Comprobantes.a.desestimar
ComprobantesDesestimar<- GetListaINSQL(ComprobantesDesestimar)
ObjetivosData <- GetFile(file_name = "Objetivos.xlsx",
path_one = workdirectory,
path_two = workdirectory)
pw <- GetPassword()
drv <- dbDriver("PostgreSQL")
user <- GetUser()
host <- GetHost()
con <- dbConnect(drv, dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
SIF2Query <- glue(paste("SELECT pprnombre,",
"crg.comprobantepprid as pprid,",
"CONCAT(os.clienteid,'-',os.clientenombre) as OS,",
"c.tipocomprobantecodigo,",
"c.comprobanteprefijo,",
"c.comprobantecodigo,",
"c.comprobantefechaemision,",
"crg.comprobantecrgnro,",
"crg.comprobantecrgfchemision as emisioncrg,",
"crg.comprobantecrgimportetotaldeta",
"FROM comprobantes c",
"LEFT JOIN comprobantecrg crg ON crg.comprobanteprefijo = c.comprobanteprefijo AND",
"crg.empcod = c.empcod and",
"crg.tipocomprobantecodigo = c.tipocomprobantecodigo AND",
"crg.sucursalcodigo = c.sucursalcodigo AND",
"crg.comprobantetipoentidad = c.comprobantetipoentidad AND",
"crg.comprobantecodigo = c.comprobantecodigo AND",
"crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo",
"LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo",
"LEFT JOIN proveedorprestador pp on pp.pprid = crg.comprobantepprid",
"WHERE c.comprobantetipoentidad = 2 and comprobantepprid > 0 and",
"c.tipocomprobantecodigo IN({comprobantes_query})",
"AND c.comprobantecodigo NOT IN ({ComprobantesDesestimar})",
"AND os.obsocialescodigo NOT IN ({CodigosOOSSDesestimar})"),sep = "\n")
cat(SIF2Query)
SIF2Query <- glue(paste("SELECT pprnombre,",
"crg.comprobantepprid as pprid,",
"CONCAT(os.clienteid,'-',os.clientenombre) as OS,",
"c.tipocomprobantecodigo,",
"c.comprobanteprefijo,",
"c.comprobantecodigo,",
"c.comprobantefechaemision,",
"crg.comprobantecrgnro,",
"crg.comprobantecrgfchemision as emisioncrg,",
"crg.comprobantecrgimportetotaldeta",
"FROM comprobantes c",
"LEFT JOIN comprobantecrg crg ON crg.comprobanteprefijo = c.comprobanteprefijo AND",
"crg.empcod = c.empcod and",
"crg.tipocomprobantecodigo = c.tipocomprobantecodigo AND",
"crg.sucursalcodigo = c.sucursalcodigo AND",
"crg.comprobantetipoentidad = c.comprobantetipoentidad AND",
"crg.comprobantecodigo = c.comprobantecodigo AND",
"crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo",
"LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo",
"LEFT JOIN proveedorprestador pp on pp.pprid = crg.comprobantepprid",
"WHERE c.comprobantetipoentidad = 2 and comprobantepprid > 0 and",
"c.tipocomprobantecodigo IN({comprobantes_query})",
"AND c.comprobantecodigo NOT IN ({ComprobantesDesestimar})"),sep = "\n")
cat(SIF2Query)
workdirectory <- "C:/Users/iachenbach/Gobierno de la Ciudad de Buenos Aires/Pablo Alfredo Gadea - Tablero Facoep P BI/FACOEP/DBA/Reportes BI/2021/Facturación"
Archivo <-"Script_Facturacion_Funciones.R"
source("C:/Users/iachenbach/Desktop/Facoep - Scripts/DBA/Reportes BI/2021/Facturación/Script_Facturacion_Funciones.R")
source(paste(workdirectory,Archivo,sep = "/"))
archivo_parametros <- GetArchivoParametros(path_one = workdirectory,
path_two = workdirectory,
file = "parametros_servidor.xlsx")
tipo_comprobantes <- GetFile("tipo_comprobante.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes <- select(tipo_comprobantes,
"TipoComprobante" = Tipo.Comprobante,
"SIF2" = Alimenta.a.SIF2)
Efectores <- GetFile("Efectores.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes$Comprobante <- tipo_comprobantes$TipoComprobante
tipo_comprobantes <- filter(tipo_comprobantes,SIF2 == TRUE)
comprobantes_query <- GetListaINSQL(tipo_comprobantes)
CentrosCostos  <- GetFile("centro_costo_comprobantes.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar <- GetFile(file_name = "Codigos Obra Social a Desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar$Comprobante <- CodigosOOSSDesestimar$Codigos.Obra.Social.a.Desestimar
CodigosOOSSDesestimar<- GetListaINSQL(CodigosOOSSDesestimar)
ComprobantesDesestimar <- GetFile(file_name = "comprobantes a desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
ComprobantesDesestimar$Comprobante <- ComprobantesDesestimar$Listado.Comprobantes.a.desestimar
ComprobantesDesestimar<- GetListaINSQL(ComprobantesDesestimar)
ObjetivosData <- GetFile(file_name = "Objetivos.xlsx",
path_one = workdirectory,
path_two = workdirectory)
pw <- GetPassword()
drv <- dbDriver("PostgreSQL")
user <- GetUser()
host <- GetHost()
con <- dbConnect(drv, dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
SIF2Query <- glue(paste("SELECT pprnombre,",
"crg.comprobantepprid as pprid,",
"CONCAT(os.clienteid,'-',os.clientenombre) as OS,",
"c.tipocomprobantecodigo,",
"c.comprobanteprefijo,",
"c.comprobantecodigo,",
"c.comprobantefechaemision,",
"crg.comprobantecrgnro,",
"crg.comprobantecrgfchemision as emisioncrg,",
"crg.comprobantecrgimportetotaldeta",
"FROM comprobantes c",
"LEFT JOIN comprobantecrg crg ON crg.comprobanteprefijo = c.comprobanteprefijo AND",
"crg.empcod = c.empcod and",
"crg.tipocomprobantecodigo = c.tipocomprobantecodigo AND",
"crg.sucursalcodigo = c.sucursalcodigo AND",
"crg.comprobantetipoentidad = c.comprobantetipoentidad AND",
"crg.comprobantecodigo = c.comprobantecodigo AND",
"crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo",
"LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo",
"LEFT JOIN proveedorprestador pp on pp.pprid = crg.comprobantepprid",
"WHERE c.comprobantetipoentidad = 2 and comprobantepprid > 0 and",
"c.tipocomprobantecodigo IN({comprobantes_query})",
"AND c.comprobantecodigo NOT IN ({ComprobantesDesestimar})"),sep = "\n")
cat(SIF2Query)
SIF2 <- dbGetQuery(con,SIF2Query)
Cesacs <- dbGetQuery(con,paste("SELECT pprid,pprnombre,",
"CASE WHEN (pprnombre LIKE'%CES%') THEN TRUE WHEN (pprnombre LIKE'%CEM%') THEN TRUE ELSE FALSE END AS Cesac",
"FROM proveedorprestador"))
Cesacs <- filter(Cesacs,cesac == TRUE)
Cesacs$cesac <- NULL
Cesacs$EfectorObjetivos <- "Cesacs"
colnames(Cesacs) <- c("ID","sif","EfectorObjetivos")
Efectores <- rbind(Efectores,Cesacs)
SIF2 <- CleanTablaComprobantes(SIF2)
SIF2$comprobantefechaemision <- as.Date(SIF2$comprobantefechaemision)
SIF2$emisioncrg <- as.Date(SIF2$emisioncrg)
SIF2 <- unique(SIF2)
SIF2$AnioEmision <- year(SIF2$comprobantefechaemision)
SIF2 <- left_join(SIF2,Efectores, by = c("pprid" = "ID"))
SIF2 <- aggregate(SIF2$comprobantecrgimporteneto,by = list(SIF2$EfectorObjetivos,SIF2$Anio),FUN = sum)
colnames(SIF2) <- c("Efector","Anio","Total.Facturado")
SIF2$Fk <- paste(SIF2$Anio,SIF2$Efector,sep = "-")
ObjetivosData$fk <- paste(ObjetivosData$Año,ObjetivosData$Efector,sep = "-")
ObjetivosData <- left_join(ObjetivosData,SIF2,by = c("fk"="Fk"))
ObjetivosData <- select(ObjetivosData,
"EfectorSIF" = Efector.x,
"EfectorObjetivos" = Efector.y,
"Objetivo.Anual.Total" = Objetivo.Anual.Total,
"Objetivo.Mensual.OOSS" = Objetivo.Mensual.OOSS,
"Objetivo.Anual.PAMI"= Objetivo.Anual.PAMI,
"Año" = Año,
"SIF.Total.Facturado" = Total.Facturado,
"fk" = fk)
unique(ObjetivosData$EfectorSIF)
rm(CentrosCostos,Efectores,SIF2,tipo_comprobantes,archivo_parametros,con,drv)
lapply(dbListConnections(drv = dbDriver("PostgreSQL")), function(x) {dbDisconnect(conn = x)})
workdirectory <- "C:/Users/iachenbach/Gobierno de la Ciudad de Buenos Aires/Pablo Alfredo Gadea - Tablero Facoep P BI/FACOEP/DBA/Reportes BI/2021/Facturación"
Archivo <-"Script_Facturacion_Funciones.R"
source("C:/Users/iachenbach/Desktop/Facoep - Scripts/DBA/Reportes BI/2021/Facturación/Script_Facturacion_Funciones.R")
source(paste(workdirectory,Archivo,sep = "/"))
archivo_parametros <- GetArchivoParametros(path_one = workdirectory,
path_two = workdirectory,
file = "parametros_servidor.xlsx")
tipo_comprobantes <- GetFile("tipo_comprobante.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes <- select(tipo_comprobantes,
"TipoComprobante" = Tipo.Comprobante,
"SIF2" = Alimenta.a.SIF2)
Efectores <- GetFile("Efectores.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes$Comprobante <- tipo_comprobantes$TipoComprobante
tipo_comprobantes <- filter(tipo_comprobantes,SIF2 == TRUE)
comprobantes_query <- GetListaINSQL(tipo_comprobantes)
CentrosCostos  <- GetFile("centro_costo_comprobantes.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar <- GetFile(file_name = "Codigos Obra Social a Desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar$Comprobante <- CodigosOOSSDesestimar$Codigos.Obra.Social.a.Desestimar
CodigosOOSSDesestimar<- GetListaINSQL(CodigosOOSSDesestimar)
ComprobantesDesestimar <- GetFile(file_name = "comprobantes a desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
ComprobantesDesestimar$Comprobante <- ComprobantesDesestimar$Listado.Comprobantes.a.desestimar
ComprobantesDesestimar<- GetListaINSQL(ComprobantesDesestimar)
ObjetivosData <- GetFile(file_name = "Objetivos.xlsx",
path_one = workdirectory,
path_two = workdirectory)
pw <- GetPassword()
drv <- dbDriver("PostgreSQL")
user <- GetUser()
host <- GetHost()
con <- dbConnect(drv, dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
SIF2Query <- glue(paste("SELECT pprnombre,",
"crg.comprobantepprid as pprid,",
"CONCAT(os.clienteid,'-',os.clientenombre) as OS,",
"c.tipocomprobantecodigo,",
"c.comprobanteprefijo,",
"c.comprobantecodigo,",
"c.comprobantefechaemision,",
"crg.comprobantecrgnro,",
"crg.comprobantecrgfchemision as emisioncrg,",
"crg.comprobantecrgimportetotaldeta",
"FROM comprobantes c",
"LEFT JOIN comprobantecrg crg ON crg.comprobanteprefijo = c.comprobanteprefijo AND",
"crg.empcod = c.empcod and",
"crg.tipocomprobantecodigo = c.tipocomprobantecodigo AND",
"crg.sucursalcodigo = c.sucursalcodigo AND",
"crg.comprobantetipoentidad = c.comprobantetipoentidad AND",
"crg.comprobantecodigo = c.comprobantecodigo AND",
"crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo",
"LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo",
"LEFT JOIN proveedorprestador pp on pp.pprid = crg.comprobantepprid",
"WHERE c.comprobantetipoentidad = 2 and comprobantepprid > 0 and",
"c.tipocomprobantecodigo IN({comprobantes_query})",
"AND c.comprobantecodigo NOT IN ({ComprobantesDesestimar})"),sep = "\n")
cat(SIF2Query)
SIF2 <- dbGetQuery(con,SIF2Query)
Cesacs <- dbGetQuery(con,paste("SELECT pprid,pprnombre,",
"CASE WHEN (pprnombre LIKE'%CES%') THEN TRUE WHEN (pprnombre LIKE'%CEM%') THEN TRUE ELSE FALSE END AS Cesac",
"FROM proveedorprestador"))
Cesacs <- filter(Cesacs,cesac == TRUE)
Cesacs$cesac <- NULL
Cesacs$EfectorObjetivos <- "Cesacs"
colnames(Cesacs) <- c("ID","sif","EfectorObjetivos")
Efectores <- rbind(Efectores,Cesacs)
SIF2 <- CleanTablaComprobantes(SIF2)
SIF2$comprobantefechaemision <- as.Date(SIF2$comprobantefechaemision)
SIF2$emisioncrg <- as.Date(SIF2$emisioncrg)
SIF2 <- unique(SIF2)
SIF2$AnioEmision <- year(SIF2$comprobantefechaemision)
SIF2 <- left_join(SIF2,Efectores, by = c("pprid" = "ID"))
workdirectory <- "C:/Users/iachenbach/Gobierno de la Ciudad de Buenos Aires/Pablo Alfredo Gadea - Tablero Facoep P BI/FACOEP/DBA/Reportes BI/2021/Facturación"
Archivo <-"Script_Facturacion_Funciones.R"
source("C:/Users/iachenbach/Desktop/Facoep - Scripts/DBA/Reportes BI/2021/Facturación/Script_Facturacion_Funciones.R")
source(paste(workdirectory,Archivo,sep = "/"))
archivo_parametros <- GetArchivoParametros(path_one = workdirectory,
path_two = workdirectory,
file = "parametros_servidor.xlsx")
tipo_comprobantes <- GetFile("tipo_comprobante.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes <- select(tipo_comprobantes,
"TipoComprobante" = Tipo.Comprobante,
"SIF2" = Alimenta.a.SIF2)
Efectores <- GetFile("Efectores.xlsx",
path_one = workdirectory,
path_two = workdirectory)
tipo_comprobantes$Comprobante <- tipo_comprobantes$TipoComprobante
tipo_comprobantes <- filter(tipo_comprobantes,SIF2 == TRUE)
comprobantes_query <- GetListaINSQL(tipo_comprobantes)
CentrosCostos  <- GetFile("centro_costo_comprobantes.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar <- GetFile(file_name = "Codigos Obra Social a Desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
CodigosOOSSDesestimar$Comprobante <- CodigosOOSSDesestimar$Codigos.Obra.Social.a.Desestimar
CodigosOOSSDesestimar<- GetListaINSQL(CodigosOOSSDesestimar)
ComprobantesDesestimar <- GetFile(file_name = "comprobantes a desestimar.xlsx",
path_one = workdirectory,
path_two = workdirectory)
ComprobantesDesestimar$Comprobante <- ComprobantesDesestimar$Listado.Comprobantes.a.desestimar
ComprobantesDesestimar<- GetListaINSQL(ComprobantesDesestimar)
ObjetivosData <- GetFile(file_name = "Objetivos.xlsx",
path_one = workdirectory,
path_two = workdirectory)
pw <- GetPassword()
drv <- dbDriver("PostgreSQL")
user <- GetUser()
host <- GetHost()
con <- dbConnect(drv, dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
SIF2Query <- glue(paste("SELECT pprnombre,",
"crg.comprobantepprid as pprid,",
"CONCAT(os.clienteid,'-',os.clientenombre) as OS,",
"c.tipocomprobantecodigo,",
"c.comprobanteprefijo,",
"c.comprobantecodigo,",
"c.comprobantefechaemision,",
"crg.comprobantecrgnro,",
"crg.comprobantecrgfchemision as emisioncrg,",
"crg.comprobantecrgimportetotaldeta",
"FROM comprobantes c",
"LEFT JOIN comprobantecrg crg ON crg.comprobanteprefijo = c.comprobanteprefijo AND",
"crg.empcod = c.empcod and",
"crg.tipocomprobantecodigo = c.tipocomprobantecodigo AND",
"crg.sucursalcodigo = c.sucursalcodigo AND",
"crg.comprobantetipoentidad = c.comprobantetipoentidad AND",
"crg.comprobantecodigo = c.comprobantecodigo AND",
"crg.comprobanteentidadcodigo = c.comprobanteentidadcodigo",
"LEFT JOIN clientes os ON os.clienteid = c.comprobanteentidadcodigo",
"LEFT JOIN proveedorprestador pp on pp.pprid = crg.comprobantepprid",
"WHERE c.comprobantetipoentidad = 2 and comprobantepprid > 0 and",
"c.tipocomprobantecodigo IN({comprobantes_query})",
"AND c.comprobantecodigo NOT IN ({ComprobantesDesestimar})"),sep = "\n")
cat(SIF2Query)
SIF2 <- dbGetQuery(con,SIF2Query)
Cesacs <- dbGetQuery(con,paste("SELECT pprid,pprnombre,",
"CASE WHEN (pprnombre LIKE'%CES%') THEN TRUE WHEN (pprnombre LIKE'%CEM%') THEN TRUE ELSE FALSE END AS Cesac",
"FROM proveedorprestador"))
Cesacs <- filter(Cesacs,cesac == TRUE)
Cesacs$cesac <- NULL
Cesacs$EfectorObjetivos <- "Cesacs"
colnames(Cesacs) <- c("ID","sif","EfectorObjetivos")
Efectores <- rbind(Efectores,Cesacs)
SIF2 <- CleanTablaComprobantes(SIF2)
SIF2$comprobantefechaemision <- as.Date(SIF2$comprobantefechaemision)
SIF2$emisioncrg <- as.Date(SIF2$emisioncrg)
SIF2 <- unique(SIF2)
SIF2$AnioEmision <- year(SIF2$comprobantefechaemision)
SIF2 <- left_join(SIF2,Efectores, by = c("pprid" = "ID"))
SIF2 <- aggregate(SIF2$comprobantecrgimportetotaldeta
,by = list(SIF2$EfectorObjetivos,SIF2$Anio),
FUN = sum)
colnames(SIF2) <- c("Efector","Anio","Total.Facturado")
SIF2$Fk <- paste(SIF2$Anio,SIF2$Efector,sep = "-")
ObjetivosData$fk <- paste(ObjetivosData$Año,ObjetivosData$Efector,sep = "-")
ObjetivosData <- left_join(ObjetivosData,SIF2,by = c("fk"="Fk"))
ObjetivosData <- select(ObjetivosData,
"EfectorSIF" = Efector.x,
"EfectorObjetivos" = Efector.y,
"Objetivo.Anual.Total" = Objetivo.Anual.Total,
"Objetivo.Mensual.OOSS" = Objetivo.Mensual.OOSS,
"Objetivo.Anual.PAMI"= Objetivo.Anual.PAMI,
"Año" = Año,
"SIF.Total.Facturado" = Total.Facturado,
"fk" = fk)
unique(ObjetivosData$EfectorSIF)
rm(CentrosCostos,Efectores,SIF2,tipo_comprobantes,archivo_parametros,con,drv)
lapply(dbListConnections(drv = dbDriver("PostgreSQL")), function(x) {dbDisconnect(conn = x)})
