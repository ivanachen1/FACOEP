workdirectory_one <- "C:/Users/iachenbach/Desktop/FACOEP/DBA/Reportes BI/2021/Efectores"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Cobranzas/Versión 7"
source("C:/Users/iachenbach/Desktop/FACOEP/DBA/Reportes BI/2021/Convenio PAMI/V2/ConvenioPami_Funciones.r")
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
user <- GetUser()
host <- GetHost()
drv <- dbDriver("PostgreSQL")
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
con <- dbConnect(drv,
dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
ListaEfectores <- GetFile("Efectores considerados.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
con <- dbConnect(drv,
dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
workdirectory_one <- "C:/Users/iachenbach/Desktop/FACOEP/DBA/Reportes BI/2021/Convenio PAMI/V2/"
workdirectory_two <- "E:/Personales/Sistemas/Agustin/Reportes BI/2021/Cobranzas/Versión 7"
source("C:/Users/iachenbach/Desktop/FACOEP/DBA/Reportes BI/2021/Convenio PAMI/V2/ConvenioPami_Funciones.r")
archivo_parametros <- GetArchivoParametros(path_one = workdirectory_one,
path_two = workdirectory_two,
file = "parametros_servidor.xlsx")
pw <- GetPassword()
user <- GetUser()
host <- GetHost()
drv <- dbDriver("PostgreSQL")
postgresqlpqExec(con, "SET client_encoding = 'windows-1252'")
con <- dbConnect(drv,
dbname = "facoep",
host = host,
port = 5432,
user = user,
password = pw)
ListaEfectores <- GetFile("Efectores considerados.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
View(ListaEfectores)
ListaEfectores <- GetListaINSQL(ListaEfectores)
GetListaINSQL<- function(archivo,field,print = FALSE){
archivo <- x[,field]
archivo <- unique(archivo)
archivo <- as.vector(archivo)
archivo <- toString(sprintf("'%s'", archivo))
ifelse(print == TRUE,print(archivo),return(archivo))
}
ListaEfectores <- GetListaINSQL(ListaEfectores)
GetListaINSQL<- function(archivo,field,print = FALSE){
archivo <- archivo[,field]
archivo <- unique(archivo)
archivo <- as.vector(archivo)
archivo <- toString(sprintf("'%s'", archivo))
ifelse(print == TRUE,print(archivo),return(archivo))
}
ListaEfectores <- GetListaINSQL(ListaEfectores)
ListaEfectores <- GetListaINSQL(ListaEfectores,field = "informehospefectorid")
GetListaINSQL<- function(archivo,field,print = FALSE){
archivo <- archivo[field]
archivo <- unique(archivo)
archivo <- as.vector(archivo)
archivo <- toString(sprintf("'%s'", archivo))
ifelse(print == TRUE,print(archivo),return(archivo))
}
ListaEfectores <- GetListaINSQL(ListaEfectores)
ListaEfectores <- GetFile("Efectores considerados.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
ListaEfectores <- ListaEfectores$informehospefectorid
ListaEfectores <- unique(ListaEfectores)
ListaEfectores <- as.vector(ListaEfectores)
ListaEfectores <- toString(sprintf("'%s'", ListaEfectores)
############################################################################################################
Consulta <- dbGetQuery(con, "SELECT
i.informehospnro as nro,
informehospingresofechahora as FechaIngreso,
informehospegresofechahora as FechaEgreso,
pprnombre as hospital,
afinumdoc as Documento,
afiapenom,
af.afinumbeneficio,
informehospprestmodo,
CASE WHEN informehospprogramada IS NULL THEN 'No Programada' ELSE 'Programada' END AS programa,
diagdescripcion as Diagnostico,
informehospunidadid,
informehospunidadinternacion,
informehospegresomotivo,
InformeHospBajaFecha,
informehospniveliii,
afifecnacimiento
FROM informehosp i
LEFT JOIN informehospunidad iu ON iu.informehospnro = i.informehospnro
LEFT JOIN proveedorprestador pp ON pp.pprid = i.informehospefectorid
LEFT JOIN diagnosticos d ON d.diagcodigo = i.informehospdiagprincipalid
LEFT JOIN afiliado af on af.afinumbeneficio = i.afinumbeneficio and
af.afinumbenid = i.afinumbenid
WHERE i.afitpamiprofe = 1 and InformeHospBajaFecha IS NULL and
informehospingresofechahora > '2017-01-01' and informehospprogramada IS NULL and
i.informehospefectorid in (5,13,6,2678,17,4,19,12,21,9,11,10,23,2,26,14,7,8,3,24,20,15,16,22,702,25,425,424,1644,938, 704, 1855, 1466, 697)")
ListaEfectores <- toString(sprintf("'%s'", ListaEfectores))
Consulta <- glue("SELECT
i.informehospnro as nro,
informehospingresofechahora as FechaIngreso,
informehospegresofechahora as FechaEgreso,
pprnombre as hospital,
afinumdoc as Documento,
afiapenom,
af.afinumbeneficio,
informehospprestmodo,
CASE WHEN informehospprogramada IS NULL THEN 'No Programada' ELSE 'Programada' END AS programa,
diagdescripcion as Diagnostico,
informehospunidadid,
informehospunidadinternacion,
informehospegresomotivo,
InformeHospBajaFecha,
informehospniveliii,
afifecnacimiento
FROM informehosp i
LEFT JOIN informehospunidad iu ON iu.informehospnro = i.informehospnro
LEFT JOIN proveedorprestador pp ON pp.pprid = i.informehospefectorid
LEFT JOIN diagnosticos d ON d.diagcodigo = i.informehospdiagprincipalid
LEFT JOIN afiliado af on af.afinumbeneficio = i.afinumbeneficio and
af.afinumbenid = i.afinumbenid
WHERE i.afitpamiprofe = 1 and InformeHospBajaFecha IS NULL and
informehospingresofechahora > '2017-01-01' and informehospprogramada IS NULL and
i.informehospefectorid in ({ListaEfectores})")
print(consulta)
print(Consulta)
Consulta <- dbGetQuery(con, Consulta)
View(Consulta)
Consulta <- glue("SELECT
i.informehospnro as nro,
informehospingresofechahora as FechaIngreso,
informehospegresofechahora as FechaEgreso,
pprnombre as hospital,
i.informehospefectorid,
afinumdoc as Documento,
afiapenom,
af.afinumbeneficio,
informehospprestmodo,
CASE WHEN informehospprogramada IS NULL THEN 'No Programada' ELSE 'Programada' END AS programa,
diagdescripcion as Diagnostico,
informehospunidadid,
informehospunidadinternacion,
informehospegresomotivo,
InformeHospBajaFecha,
informehospniveliii,
afifecnacimiento
FROM informehosp i
LEFT JOIN informehospunidad iu ON iu.informehospnro = i.informehospnro
LEFT JOIN proveedorprestador pp ON pp.pprid = i.informehospefectorid
LEFT JOIN diagnosticos d ON d.diagcodigo = i.informehospdiagprincipalid
LEFT JOIN afiliado af on af.afinumbeneficio = i.afinumbeneficio and
af.afinumbenid = i.afinumbenid
WHERE i.afitpamiprofe = 1 and InformeHospBajaFecha IS NULL and
informehospingresofechahora > '2017-01-01' and informehospprogramada IS NULL and
i.informehospefectorid in ({ListaEfectores})")
print(Consulta)
Consulta <- dbGetQuery(con, Consulta)
View(Consulta)
Consulta <- dbGetQuery(con, Consulta)
Consulta <- glue("SELECT
i.informehospnro as nro,
informehospingresofechahora as FechaIngreso,
informehospegresofechahora as FechaEgreso,
pprnombre as hospital,
afinumdoc as Documento,
afiapenom,
af.afinumbeneficio,
informehospprestmodo as modo,
CASE WHEN informehospprogramada IS NULL THEN 'No Programada' ELSE 'Programada' END AS programa,
diagdescripcion as Diagnostico,
informehospunidadid,
informehospunidadinternacion,
informehospegresomotivo,
InformeHospBajaFecha,
informehospniveliii,
afifecnacimiento
FROM informehosp i
LEFT JOIN informehospunidad iu ON iu.informehospnro = i.informehospnro
LEFT JOIN proveedorprestador pp ON pp.pprid = i.informehospefectorid
LEFT JOIN diagnosticos d ON d.diagcodigo = i.informehospdiagprincipalid
LEFT JOIN afiliado af on af.afinumbeneficio = i.afinumbeneficio and
af.afinumbenid = i.afinumbenid
WHERE i.afitpamiprofe = 1 and InformeHospBajaFecha IS NULL and
informehospingresofechahora > '2017-01-01' and informehospprogramada IS NULL and
i.informehospefectorid in ({ListaEfectores})")
Consulta <- dbGetQuery(con, Consulta)
Consulta$modo <- ifelse(Consulta$modo == 1, "Capita", "ExtraCapita")
Consulta$diagnostico <- ifelse(Consulta$diagnostico %like% "CORONAV", "CoVid 19", "Otros")
salas <- GetFile("salas.xlsx",
path_one = workdirectory_one,
path_two = workdirectory_two)
Consulta <- left_join(Consulta,salas,by = c("informehospunidadinternacion" = "informehospunidadinternacion"))
Consulta$Sala1 <- ifelse(Consulta$informehospunidadinternacion == 1 , "UTI",
ifelse(Consulta$informehospunidadinternacion == 2 , "UTI",
ifelse(Consulta$informehospunidadinternacion == 3 , "UCO",
ifelse(Consulta$informehospunidadinternacion == 4 , "NEO",
ifelse(Consulta$informehospunidadinternacion == 5 , "PISO",
ifelse(Consulta$informehospunidadinternacion == 6 , "GUARDIA", ""))))))
Consulta$Dias <- difftime(Sys.Date(),Consulta$fechaingreso, units = "days")
Consulta$Dias <- as.numeric(round(Consulta$Dias, digits = 0))
